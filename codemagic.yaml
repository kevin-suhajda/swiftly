workflows:
    ios-swiftly:
      name: ios_swiftly
      environment:
        vars:
          CM_CERTIFICATE: Encrypted(Z0FBQUFBQmZNXzBqMUwwQjhGVG15cmYzWklKUDZ2LUdMLWsyaTZiWmlLdUxPaXhPNEdRb3YyWHZ3eklFcFNjYnRLLWVpNEN5cWVsRWVsbk1ja0U3eUNQaUdod0FNb0QtQXc5UndPUHFxU3BFUmNUdEJ3ZlVwelhHTGpsN21uR0N4cGNvV0tXZV8xaXh5dlZ2UUJ3SEhpRDk0MkZVYm03T01CNVpUME1Yc2dySWh6bjZCeFVOUHNla1Z1X3RXVHB5U0dRTkFEdExfLWZ4enlrX3pVY1F4RVBkYS1wWjZBTS1FRGdVakJ6cjVNMmNJb19qWFY5NzJDZHlMZkxIXzNGVGtxSXF5MHpyQnFhNWVlenljOXZMN0JnZ0J4ZUJRNUgxdWJ4MFRGcFJKa21jQ0lrUDhUU1QzdDdDWXVnZVhXYzk3ekFtX2toS0k2ZUIwcXg2aTktbXhPTGxpRVNkRkxGbUw1UmpFaDhMaC1sdjhPRTZNREFPM3d0dmxzQnRtTmdablpRMzlEbWVpSDVyVzVqNTFMOHR6WTNxdllmbUFGY29kS3h2S2RUSHZaeE9LYzZwRFFPVnVwQ2FPZ3V6NjdGaVVuUlVLNG1UNXhmRFJCNmxvbGp1T2FfSFU1QncxMEV2eVlva0tRS3oxX0ZaTVJqRVNUZFFPNGVPMUxzeVZub0VYZWF2MlluMExBQllZck9nV0kwaWRxWFQ0Wk1lRkZZLXg0SzVEVmdjLU5tc2VaWmlVTnZ3Q014U25fWWtkM3BPdmxBSTQyQ0t6alM3Mk15X2l5ejZQVXcxZWV3R3ZYVkFEbnRVV3Q0TXNndHdrd3JwakJZVkdVY3JwdVdrandkLVY3czRBYUdwQnlWRHhqMUNuNnN2VHZrUzE0Y2Y3aFhQclBHOVZNLWdkaHRwc1BXVHVtMUhIWXQ1djduMDItb1lDR280d2RHRVFjVHlMYTNSNVg2cGYyd3BnN1BQVE05bS0tQmJGcmpqZ2tuTU5OVmR2Q2g0NVN5cGR1N1Fhc20zb0FTRmtRSnJRX1R1ZVY2M1Q0MEZMOHZNaXlzb2JFS05KczhQNzZQdWdhVVdic1NiMlIzXzAxdzJPX0tEQmFLak5Wa0JtYmpRbjdkaG1zYVJvRUtsYU1MWGh1OFdEOXUxYnBlQUFJcm52NVFtSUh1ZmNSb0tnUHUtOUhxWEpVLUs3MUZ1NHNLRzllTG80cXh6X1ZpWDdHWFBQZVdlWWdPaThvRWZjZmV6c2E3LXdfT04tY2RpZVQ3eUtpcDVPcHVpb1NkWXNMckxyMWN5Y3JZX3VaYzd1SVk3RDRfMzlUT1Q3T1ZQcU5xbG82Z1pmYUlfNG1ZbHlodzVEeG9EQU1wLWVsbmEtR2h4ekRUVDMtaTh1OFJ5SUYzbTBvWGs4d2E2SmhSZXAycW4zVnJzc2FYdV9URmk4QzZtWnJ6VHdVU0Y2OXRxeVNOMWM1YTZQZjB1bW1ldEJrTzNjakdqdU00MWsteWVCNlAzdVdjQ1pzV2VYVGFTRHlrYjhlblJaSWNfbTYyWWpaeE16UVY0WlZIOENNcVZRT3psNzRoN2FwelZkYnJLSU92SmkyeEhaeDh5NzM3Tml4ZmlXV2I1eno3c3lSclpHbHBaOHU3UnoyaFJmeVU5cWVLSmJPdXcyVVVKVEx5T2daNl81bmRaWHhyTnV2djhaSzRNZjVraGpvVXA4QVdUTklIXzhiVERKSG1MX2N4UkpWZXZxSmZzVkpoOTFGeWNOcnNjOEZoRFNNalB3Y0E5aWZXeWI3VVpyR0VxeHNvcXZaM0lsUnJWdU5Ja2xud0RfZEw1TDdwc1ZMR2lqa1h0MkEzeUxtYzVtTV8tNWRvVjBKeFFJT25sQ3R5LWNtQ2JhZGxrcjJkam85Z1dCZE4tckpuaG9BWS1Sc0ViNWZNNmR6T0h4Sjh1dTF4eXgtN3JhaHFNdGJrRkwyc09UbmJPZGd6Wk9zazJNc3ZMeV9CTzJBVDRka0ZMNHEwUVk3UjF1RFVaNzFWWmF1Z2FsSGg5V1FYQkVFWEdtN2hPeTFGTnRRejF0bWhBSncxcDNTdHNiLVE4OWlCbHZyRVN1U3AzRmpkOXNseVA1OG5kWHl5Nl9LWWhTYi0yMk9peEJ0M3dkcHJ5ajFCX29teW9jR2VSTEdVX2lFaXRWMmRtdS11NTlvWnR5dWU1LU44c2xkYW5oSGwxc2IyNWJSQ1NHdmc0NXJVZ0RyTnJTbWpCWUZtNVFYMndHbU1Xelh2UHY0NWZWQkRLbTJJdjZubWp4Wi1kdENzTWpvMF9wei1VVFFGNDZ5NzRGam82dF9NUzgyOVZtU3N6dnF3NkJIZHc4RGJmRkE5d3oydkN0QlVGWktXelNaNlJoQ3BiYzJubTBhQkFRSS0zRTdDWDZjdUY2WVhkU1ltb3plUE1VZzJwTS1YV2pCT3lxV3VKLWNIWTN3bENpZ2ItVlQzQUYtYzJTbWplZG5yZFlfUEdCeXMtb0w4YmplQ0RwVG14aEZVaVRadlpwbVZWNi1CQy1XakswWV9vYUtwTVZES1RUMVhVM1J3YVlHM2J2aTR5azNzR0FPUEJoSzB2c0tWTTFwQzk0aU45b3Z4QUdoN1JjQll1bTdfc044NTc0SFBiaWxldVRaS2hXWkdhdFB6Z0doc01ERE9HNWRub0FObHhNRkRHbmU2ZTlqVEZNSlBDcU5LbVl1Qzhyek9NSWwtRWk0cTFzbDB6dGZaLTAyQmhvQ3lMa01HOEpvREpQa2pzV1ZvQlE4aXRPM3VwM3lDMFo5VURjZlZrQ0ZzVjhGbW1tWWtsMVNWLWlrLUF0b0VUSmF0ZFRDdVlRNDJJTXNQNDllSHhyY25odzBLTmtXUGprY28wRkhSb2RKRlBzbW8xendLbGlVV0U0WUZRVUdpQU9qaWFjcThTTHVoTllmZXZINWl6cjNDUU15dWVvUWpMamtndzlISzRfQWNfN0N6bjAzWTUyZ0FJS0g5Z3JEUzFFeUwyZjZkb3FpVzhmUHZ0dXB5RTktVHZ4aEZLUjFFYzZVREc1V0Y2cXBNY3JRWDNCYlFtMzQycDJIV2dVSGtYa1JsV05EX2N3M2dLYnpGcEdNT212cjcwcDlLTHN4NFMyOTNlRHR0ZFMweDI2UFdXaWVmclhraFQwdXQwaUpiZ0x2elNBbnB5dUNpTHpaZkkxZmxPYllCTUV0NnlwSWczWGhrNHBwemxTVEZOc3M2ZVJTNUVYWUZvOVBoM0JtQ2I3YTBfc0lVTnlBX1hGcWNpOUJ2RkVDYkN4QlptbjNuZ0NjN0pFclFTdHc4aFVxVmx4WVpDNGs4UjZTWXdwVFZZMC1nQ0szQkNHckpGYi1vXzlHUDdaYVEyREg4Q3RzZWloazdXdFZZU2dWU2ttb2FfQ29wWXZzWmRWeHpYbzMyNndueUlRSHJOX2VuOTZ6Y3FCYVpOcDIxNHVGMW5Ea1dkU2JLY0puYy1vN3d6Y1duRmtwMlU5OWQxc2tTbTRkNUFEaGp4Qk9jSXlYclpFSy1RcVY5Um1hZm5WbDVoZFg5QlY5WnZDUkM2Mk9ZcXBtT3BqVEkxd1ZLbE1YOS1XX1pyWWRBNGNfOG5LYjgwRTRQRFEwajdZZjZNOTdMbE5RZkVmdzI2MG83ZnpNQW1kTWhKb3IwUXMwNUExXzduWm8yTk02VWI1ZThqc0V1TkVtSGhWRXg0R0Z5TE1zbXZHU0R1RjNhXzVhVnhWSDFDdHBzMGFJcjFMWm8wZ1NIcjFMbDNENWVNdk05X3V0R0VfT1hiYThoTVNqX1VKRmZXT3ZhNHVoT0JuOUwtUlhvbmVTVDU3RWoyM0d6TV81UW8yNjk0YkpuYXVWUnIxV1ZLdlp0eXBJVXlsaE5pVTJDLWNuanhoUTBvTHZ5V2dkbkcxMjltTzE5M1c3eEt2eXlHa3lyNHlndXU0cXd0STV1X0FIRTE1bUR1NE5xOWV5dVpSNXNKRHB3SGV2TS0xV3BoOC1RaXJ2MkhiRlNDeG1qXzg2ZTdaWk91aHZycVAtMktlYUtOWk5uX2pBcVFTU25fVzVuWlp1MU1RY2pMMlBpYjJKd21wWGF3U2w2Y2Fzd0QyV0pNT0Z6OXRXZDctb1VpUzdQMTBfUWs3MzdfUVFkZmdmcFJYVUUtZWYtVnFRZGpRazVySzhVeWo4R2tIQlIzRzRRcVRLQVpDUllZNHFsa1ZzYWNuV0h0U21EWFdyTkpSRzhUbnJjWEpmX0M4N3dKMUpad21DTEROU1d6VlJJaDVlMk5QNzNaM1FKRWgyQ2NMdTRxa3lhRmtERTZndE1GZFRmQlVUVzZVYzc2SUMxVE5GSS14aWVZNHNWVjdDQ29vWC1VaFJYRWlfcWROR3hFRDUtRThsMWRqZ2pLR1hCRnp3M2JIQVhRcGNfeGJIZ2hfcGF2dWZGYUFJSHE4Q3ZUcENFd2xTc2llbXFIMHZZLVRQNjRLUnVWZU85SFFkdzdYUzdfejl0ZDRmMTljMlpSZllrelBDOVBhOFlKbG05elVxVUI5aDgyRFM2ZUhscTE5akRhZC1LaXUydHhFNTk1RmhETVZ5N0c0cDJWNndIMmZSNHoxaUp5bm1BQVg4ek5OeWlkUjFMVEhfTmlldFcxb0VHLUlwTk00dExrS045QktpYWVJTWFWaUF4T0tocnBTa01Pck9sZFBjZXZ3ajhsSjc2RklJaXhINXFGc00zZnJ1SDhEekxZVjFGWkFuT3d4QUpHUGE4N0FxR3R2c1VIajZEQWNsQzUtdDZTYndybXpCQkQ2M3ZEc0p1a3VXbHJJM3lQcW1JMDltRHlVZGlyZEpjcXVuVFlWamMtTGp3OFFocDRwWEliNmtvYllOU01sVUZXdUJycC1xeUtYZG9kaXU1dGNtV2VENUJBRTB5UEo0RFctWS1jdFYwMWRxTFlLelo4VUtvWlViWGxMR2lJNnBsLWc1SmlLVmlna1RRdHF2b1l4Rlc3MFBXTlVBWEJJS0dKV0ZGUmplMDd5V3lEenpIVV9mTm15TXRwcjd1R1NPRVBTc0VDQ041dEpwSllTRS1XbFdZaUxINTZuTlJSTjZCM29BVERkMmVocmRpUDVCNnNpYTFCdXBtMW9XMm9ObWZ0QlRlemtiSW5rcFVlelJYRXh6TkpsUEJZbV9BRmsyQjk5SXdBX1k0aHg5Wkx6WFgwWXJWSm5xOG9FR2NfdEpFSkJtTlJUZEtNTHV1Y1BPUHV3ZTIwUjcwdnR1dGhJcVRINWRCZ01DUkRNOWRXcGZZVFNSSGFwdXRyR0FQUHRMYTBxYkZaYmROV2d0MGh0aTBxZkFqanptZGt6RTlyVlNGdTI5QVRtSFFfX3lKZUIzbWJGeHBrWTNCNEFKNl92RGFjbDR3c1NSTjZQT1QzVGtjbUhodzVhem1MOTBaSl9KYVlQR3k5cG04VDVEYU9FVlp4bF9kU3Z2X2RqaXJmTDR6TjhtcHJlZjN2MUFhWTZkenZfRUZIRDlFVWl4b2VKT0J5SHpPeVpzMzRLTkxEYS02VmxuR01IUGlaeUMtbTJLLVllZ2JUSTQ2b0Z6aHA5bkFVQXZQV29YYXpQQjN2TmREaENUdTVKWG5oVXJrVGtGcUtXUjdvVkpvNGJFZ3lnUGNjY0lZakIyNF9tZ2ZJNXViSXY1N3ZWZVZkSWdZVmpmcDI5WUpXdngzZENJSmVDbjl6Y1diOGdlTG9XZnp3SjJFSVdDdXFhaW5WT2ZnNTFVMFZzSFBFbnVhNFpxQnE2QjJJQko5dWM3R0tsUmFCdy1RMTQ1WUc4RFR0TmN6RHBtb2xDMHo5cEdnTjhaSllIalJZenZtTE14M2xpZm4zeEtKa0JFMW9NVW4tY3hfYUZKQjR4TDZCM2JNMUlGQ2V3d0lCb2tZSVE4THVvNDl3dlhhN25vWXVMRlE1TU1OYVptMEIyODFUYzhrN3FINjBOa1dmaEtDYUdHWFdreWZibTkxM05qNWxadF9YVEVNdENjUGp0NUdLY1k1c09Kd3k4MjF1NFFYUUJOU3pmRE1WUko5VVRuZmp6SnhKWDFubmJNc25sVWdvRnFxUTVDV05pZ29wWFZndWRhZ2tIY0VCWDlFT29CM2l4bXpyajMtbmlnWHF4RjIweGFoRDdhWjF1OFBUNVYxb0FqZDc4b3dSb1lxWlR3VkcwaVdZT3RseUNqQkZGbHNQcXBkRTlxa2NRV1NMZHhrcE1zSHBfdFhXQmstalFZakh3YkhMZXZrYUFkMmVCNk01YzE4alQ1Yjlvb1ZsZmFBQmQwWW0tT09PNlk3YlpXNmtLTTROMHJBYlZ5S3REQnVNY0p1THdoNktpWnZ0REE3MlpuT21tVkRVZmVBR1JKQzBFZ1NDb3VDbjdCMXpaUjIyRElSanYzTzhUZ0ZyUnlFMllRSERkSlNkOFZVajVUdlgwOWJVc2pJMjZZV2dkdmRJYzQ1ZHRmd3hEWjVoMEVHMjNUMGE0RUExbTg0aUV1Vko1Nlo2TjJHeXlTLVFmWjVRXzl2UkppTHZabE5TRGlhVmxPWm5lSmpYSEN3TV9COUg3bTFOajVwVncwUWxfV29SZndoNldtZHM1elhQY0xOS2V5MVpCeVk1Zk5JbG5PTjcyUTIwcFh0WDVnMXpuRGpsR0tOY2drSE80M3NDUVhZSDFjSC10UE9mR215MW45c0xaTFRuclFHZ2FjZzBPVUdLY0QtajE1ZWs2bzFWOVI1SlpDSGNNajZ2TWh6eUR4NTNpY0JVUXp1NlhXd1VLTWlsbFpQNFp3cy1MTjlLTVpVMHRNdmFaMk01eWdNeUh2OGRRenMyWWRYN21qQUstQXJwR1JfS3ZFejVSSUtWVlQ4SHNLd2JHWUFqbjlFSjBFYXB2NGpERk1OTjNYWDFRR0NvTjFQT1pWaHJuLThmQ3ozb3RrMEE4eUE0MWllLU1Zd1ZvMXVlTHQwQ05RUTZqZnZBLXp3R0U1U3cxcnBvTnZNUVlYbmtSR3Y2YU1ITmxYMkRFOFRPNkR3TnRoeUFNVmVTRlZiTFQ5a09IRE1WRThOQUtqVXE1Rng0R2U0eVl5NlVHV3ZwNGhFNFVEaXdlMUg2X2t2OUtkZGZ5Yi01NDd6eXBkOFluWTN4WUxCVFpsUFpVWWFlWUY3andIMW5MYlFPLVlFdkJtZXpoUnMya1ZSVWNxRm5NN0dMZ1V6Qk15T1YtOUc2UC1PTXBaT0hiY08tVGFzLWloRkR0b08yX3FRendmRFl2Z3dhWWtiOG5SSlZmOTFJU3htbVo4TjlBRTNrbG13b1BCXzlWLW12Snhxc2Q1Ums3UHpaTHllbHZRTXhZbnhYUlJYd0RVd0dudElFV2hZVWc4dlE3aEhCY2FNUGVrUUFNRHlMSkdzbmtRc3kyNHZLQlBabDRDUk5VSUtUQ1c0bElyVWVKTjVVWUVxM1dKN2VGOHAzSWpXNVFyMUxWSFdfOS1KcFFYREZhcnhzZWRGbkFxaWp0WUhvaEUzTnBncjcyVzdrcFlNNlpvWURWWU5fQ2hPTnpkWDk3ZjlPRjlnTjlmd2tkdm1IbUE0bm5kamZzU3VSUUhNRGRDWThIclJ6Zm9UUDhTeFJUWTV5RjVJaXpHbjAwZzNTOWRQT1ZqczFXeDdsRlQ0WEdOMm9MNENTcVRBSW9seEY1TXpVbnVXTW5vZFVmd3Vv)
          CM_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmZNOGp2TXRuUmdEZC1XakE1dEl0XzExYXZjSjdDN1dtTnVtYkR6eXV0aVhVYmhPQTY5YlFoUVJ1TTJpUUtRUHpuQ0R4ZEFQNHZvQW5oVDFGaS1vc0NLRkZYemc9PQ==)
          CM_PROVISIONING_PROFILE: Encrypted()
        xcode: latest
        cocoapods: default
        flutter: stable
      triggering:
        events:
          - push
        branch_patterns:
          - pattern: 'master'
            include: true
            source: true
      scripts:
        - keychain initialize
        - |
          # set up provisioning profiles
          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
          echo "Saved provisioning profile $PROFILE_PATH"
        - |
          # set up signing certificate
          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
        - |
          #!/bin/sh
          set -e
          set -x
          cd $FCI_BUILD_DIR
          agvtool new-version -all $(($BUILD_NUMBER + 1))
        - xcode-project use-profiles
        - xcode-project build-ipa --project "swiftly.xcodeproj" --scheme "swiftly"
      artifacts:
        - build/ios/ipa/*.ipa
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      publishing:
        app_store_connect:                 
          apple_id: Encrypted(Z0FBQUFBQmZOQTRWZUdzR01BMTdDbmFoR1l3N0dqU09MaGRnellRTmpWR3RUYUI5V3dwNlJTNS04OHVPVmh4eEh0RmRUc0tzbG1XQTVoUnh4RGJOM0g4VjJXSW8wMXI3VFY5RWRJZGdTbUh1WEgtZ1hySjhnb0k9)       
          password: Encrypted(Z0FBQUFBQmZOQVlvQXJBUUpJWmNRenhnZzVURHRYV0JwOGRYVUVPdVY5aWVRR214Uk9KM3lUWTJIclFhamNmTF9uRUZ4SDFpYXA4VG80czdvY1NlSTFMSnR1SWFqaGhCMVlYRVBvZmcybHo0clhqT01VTWkzbkk9)          
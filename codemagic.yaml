workflows:
    ios-swiftly:
      name: ios_swiftly
      environment:
        vars:
          XCODE_WORKSPACE: "swiftly.xcworkspace"
          XCODE_SCHEME: "swiftly"
          BUNDLE_ID: "io.codemagic.swiftler"
          APP_STORE_CONNECT_ISSUER_ID: Encrypted(Z0FBQUFBQmZsYUJnQW8zQVF6eXEtYmZhekJTZzR3MXBiclE3djlrQzcxeWw0Z2tNcWJVbUVxRnYyT1pXUXNSSzEyS2VpMDMwc0tZR0NoUDIyUXFHTC1Xc25fT0VMeEhjV2lmamZTdDVCWWxTMFJua0tWZFh4UmIxelY4MDd1TE03cFpWZ0J1VENDRFk=)
          APP_STORE_CONNECT_KEY_IDENTIFIER: Encrypted(Z0FBQUFBQmZsYUI4NmNFcnVySThyclJKYjFZeWdnYW5WNmd6XzRLMVl4ZDZFWFZYS05Hb0w5eWhPWHRCMHc2STV1S0V3WVAwdldIN3hPczFncnBKYU82NXJXV1g5RHltTnc9PQ==)
          APP_STORE_CONNECT_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZsYUNaOHluSUUzUnhRQTZHeGg4OEZYS0puV2tBQ184dFpxaExUZTBHQ0w1RHEzYmUzMkcwa3A2T21mTE5YR0diVzBNWWk0VmFmV3NKNGlORDZXTFZiVndRSER2RDhXaDFZd2FNckl5cHRna2pfek5vVF9qbF9tZ0ZPbzl4UktpajN5dWx2czBqOEtYd2NzX0xPeUxTeWhFOGQ4OUdkOENKTGpyc09Td3k5N0YwbTYxb1U3cGtqNUwxeHZOdGpJdy1hNUZJTEpqRjhCdnBzWWNaTWE3QVNDQ3lYUUg5MWZHaGhWdWVDZ0x1bzhTRnBHSUI5NmFvZ1N0S2xOU0taZzN3QlotRTZrZ3VCTmhTdlpLdGxXM1B6Ykg0RTdBQ3F0eVV6dEdZUFlnMllwRE5JVjRFajhCUVZrdWlhZVZfTDV6UFRNaGdjZ01JV0FmY25vZ3c2MkMwekJod2czMTlKbUNaRFFRbzhCSFVZWVRJNTFIZjFadmxmYmFDd0FabWtIMUdUNld1ZS1lM2I3MFF6N3h1Ul9ETXh0amhRMmpES09TV003VjgxUl82RDNVTFpKdz0=)
          # CERTIFICATE_PRIVATE_KEY: Encrypted()
          # CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZsYWlaYmo2aWpGUEl2OGM5Qm1UNk5QRDNMNTY4MkpWemtPZkRHZnZTSnk1X1AxeFBFT0JxbDF0MDBtTjV5VjlvRUZENUdSX05WTk1qVUlLb2NBNzNPVWlmNjV0R3JpM2k4Nm9PenoxaERCWVlNVklrdFBQMmtjZTR1M3ZzS2lnYWpRalNQNkQ2d29vcnBiNU9fa0docE5OZGVRZW4xVnhiOEdkbHFsbkFJcGZTT1hCeENGS3BLVmRlOWVwNzZKQmxkR1pTWi12bmtyb2VPR1NFZy1QZFYwOXR3YkZFVTV1aDlaa3RfU2dSMUJnZHVabkFwTlNVMHpoM21OOUNWVW5QejUtQl8tRjN5bXZzWUg5a3VhY3E3SGRuTjZBM3V3c2RLbkVQQml1ZUhMOEF4R25xNUdIWndQVEo4V0dUYkJDcmhua2JJVHh0bzRSRVFIQTlIWlA2TUxWdy1DdHlNZVRWajJ5d3Z1RW91NWNvQV8tcVhFelJ6WllmNEpmRkc2RG5zeUduVVQxQ0RwQVhkak5KSk9sVlhob2hrbjRpaEdnanFWQzY3bVlzNlV6RVlyQWFrREYycWFDc2RUazdueldCR0lKdldGblhFWW5sRk5sdjRWOG1SanB0NTNqeU1qRDJRNTRyTm9xU3BNSFJxTlF4eC1MNTJYMzhPUmRjRFp2dkozRkJNbzhhR2JLS3R3X0FRcDd6dFpNRkVOcUVpOUx0NWpod1FOMkVMMzh2ckdKV3pJSmVwR21yblVsYVNOLURsSWxoSVNvR1dFOUhDQ0xnRk5xSEhYMFNLTzloeUM1d0w2VWVnUTVRWm5UOHpOOENma3piYm9uOWZvLTVkYnJlTjEwOFdUeG9NcU9CaW5hYVhVUUp1b3NwNmdaMkFIekxwbEo3NW9keHhWQ3ZDblFQQmJISEFwd2VZbW5yYlhkMUROTTBwN2Rjb2R3UWxTOGRsQURKZXYwX0FqQmtzUDVfaklaUTJrWk85SktaRmROZXQ5Z3VjWnFtRW9PV3hmdjhheVZNc1pvVXlNRWFRN3dxajFNSk1qTk5vaXZXYmdaQ24wSWx2eXpZcXNJWFpDSjJtMTRSaGJyM1NTZnhEOEFaLS1rWERULWlseFhoZ2FPOFlDd3lrQ21pbzRJR1F4dl9qNlE3UGs3eGFsQkRBbHE3Q25DWjE2VnJJWC1OeVhpZDF0d3JXMUM0VUd5aF9DTC1TdF9qSkJ5Rkw3WW16a1Q0M040NlUyaGdkS2xBOW5CbHhYd1Noa3dNd3gyQ19IX3JEWkxCWTk5OFNXQm9EdXRTWEc0OXFfREZrNExVYURWWVd5VDVLTWVQX2loMnMwSTNfaElvTUlFVXZXXzhiTDllWjc3VVhNRlVYVVJHQXVDamJNbktoMmNEQWNZalJhZG9ycDhoNXJKMVd2QjIya2RhMUxGb0l6RmRGajRaRmh0N3hsc20yUHF6SWI0RjYxMV9UbkpUMlZpYm1jM1JyU09vM1FZZWh5ZjhYTWdPanlJZGFveE15cE1GTzFrSkZERmltaGlhZGNFR3FhdVdzbm9jX1NHZlJPS3pLS3NwVVM5bGpOdmJKMVlSZmdhTTV0SDdzSlJjOEV1ODF3QXgzR2t2c3ZpeUIzemx4TUExbkR2emVGX3N4RUlQc2NNNW8xZFc1M2g5c2txRWNuT3k5ZGlYZl9oaWtuNmtZX0ZjbU1ERzQ2QjJqQ192R1dLLVR5aVl5UUlvQkl2X1RrQmlWMi0wWlZZU2ZiSzhiWDdpemVhOUNJWndXem5KVndiSmk4RnAxOGhWeW1ESlNfcmlrZjlOMWJncGdMeVNDbDMtU2k5Y1VqdVFuY3hyMkEyaGZsbDZEaWpNNFpfeXBaVVNmem0tS3BhUmxHbUhJM1J2bXhMdy1hU1gzRDhyYms0ZWRJeU43NnRrNlhuQkEwMXpYd2JXOExWNnNoRjJNaW1NNm1xNHVIdzVqb2pCa1o4X2JsWjVMOFJqempEbmdGSTMzNkZoRFgwYjE1TVpKSXBVNHdOUExncHhvV2VLMHZKUGRfVjk1M2g1SkJOZWFyc0xLcnp3c1ZhZFdOSzBEWWwyWnpPVnVqWUNZQk1wQmhDQ29PVlNuN1JUbVdTOXFRRWJZLV96OUhSTlEtQ1pJSEsxeE41STR3QnlxQXhac3EwQ2NrcElGc0RFczZMWXVTLXdVSldrRGJQM1dkRzdhb1dJdURvUWJiM25wWVZxMk56dHNCTGFDMWh2aHhScml0aEM4NXNqU2I5WkZ3aEtaVDBZMHZCa0RPdmNYS3FuSjM1dlNIR0lIMVlDSGRCR0hBWkhobFloYWlMQ3pFeWt6UlRDcTFUaklNMmp2T1NIaFMwNTRpT1RfOHJZb2tSVzQtOGVUSnI5U3F1c05PaHp4VTU4NHcxLUctQmZJb0djdFRuZEtndlRYMmxCUm1ZYTlNanFJT2Mwc0cyOXdTanFtcGtFNWkyU1UwejM5ei1TMGd6cVZKMVhtandHWUNGSVQzTnNpZUxsSWFuSTh2TG9EbjBUNnJOdGVxQ3EzNEtVZU4wd19lZ3RQbnlOcFdXTW5Da3dGNk1lUGNRVEFWNlg4RDFfdUNkV0YxZDJLZGJqSG9rdDFwRTkxTW1hc3ZIbmxSeWRsWVZvb3ZlQzY5Y0JuYUgtS0pJeTdXVmlYU3F6elJBbW9FaXhvS3A5bEhucE5zZjd4M2tPRjNia0hLNVJjaFRBTmlaMko0bjA3dWpMaUE5OUVQQTQ4ZlowaFVuM2NNdGFLU3EzNU9mTUtXaFV6S1FjTG9aT1oxWS1EajJBRGdYLTJiY05DdGNlVVpiTTJnTXlsZWdydDRjalJOUjZOdjNhdjdqNlhfWTQ3aWdXQXg2eVFTOHk1U3JVSHJOd2NIWkVRTG0ycXpNTG5ma1NZeXZUTXhEVG8taXpKbGNiR1VwVTJtNU91ZkxWUkdBUW5YZUdDc1dzSDFMc3N1b0tQN2hHVnkyYXN1eTU1bUtlZ0tRam00UU4wRXZyVWJGNkVpMkVYRmJ1aUNld3V3ZWhuVU1uTm5ERzBTYjkxNF8xN1RfVU4xcHJyMGFM)
          CERTIFICATE_PRIVATE_KEY: Encrypted(Z0FBQUFBQmZsYjJIem5MbG5BRGdvOHNtR0tzenBjYkQ0b2xGRGVpc0w0dlRFNDNhUVRDV0lXVVVNOHJUTU5DMlNhOG1BRHJBYmI4ai1BZGpfLTByNWJad0R4RThVLTF5YjJVVVJQMUZCVHVOMkRXM01TYXdJb2ZqVlMxZmFBeGJ2b250bGFXbkZkQXpXMmt3U3NlbDBFdnN3OU5oTlJ5bWFWWlhSMjZUcnl2VHgyMWFLX0hTREJJSnpfVm9hV2hxNldYLThEcVpCZ0I5bnlxTUNONHNwX2xsM2FGWGRtSnFrc2Z6ZzR1SzhZRktPRmNNQlVrVkFfN3o5RVZYVmdNRzNrZE54RDFmcjNhSUdBT3E3eUs5eWRnelZGblZ1UXBGdzlOZnJ1WnNqeGRwdk5RaTlnTFJCWFo3Si00WnVyWFhVelZNTkF0ckxTWGVUd3lyOFQyakVRRHFkbmtUMDhmd3FCWmdNUGY0QUtzaTJ0NnpaNW9OX0N4VDdURGJUcDRxUnlwaUtIdElwdEhUZFpMcXFzQzBjbDlWbTBhdElGMVBkRnpPNW9vLWZCVXBIcFlMbzJmME1aNGpnRUlSWWNwZFFsa3NHRkljMUJwbWF2U0JZWWR5SEdFNjRtLUVuMVR1QnlvWjIwYlByNmdPTTBzbjhteS1COGp4MHVMNGwyMS1OajNSeEZYSkRscDRZdzJ2UERrU09uU1FTcnRaeDlpbGhlN2pWclgwdWNBMDVURFRsSjRqdjNSeEFmano3cmhESVVFMEJKVmxtZ3JMUFBkQVR4STVxdVFlVF9lV19nUnBMY0xXS3lSeWRXNTc4YXBOckgxd0QyS1F1MDg3SXA5RkRmU3BMOFRmRm1qbE40bEJmcjNPeldESi1fZHgzVUZubEllaDBuSFEydW9hWGcwWEtoSktqbzliQlY3UUJQS1Bzc1BNYVNlb2hTVUJvclNUdmxHTjFvWHgxMTdmWWdyb3FTb1ZreUx0U3l1a2hEUXkyMjhZTktkVkRNZzdzUk1KWE9kaThGdllVWG9CcHR6NDFCNXREcllMRHZhUVUtOVdaci1TVlV1RldzckJVRDNEVXRwakNISVlpRjIyOExPS0xWU01QbEdGVlp0YnZ0N1FwZmJTY2hNZlN6S0pUOTZhYkYzMXo5TVZXZWFMLXdoMzJDTUpLa0FMcGdGNnpRR1JMNHE2Zk1aczhCT2VmclBObmRUR282N2RRVlo4eEx1Rl84a1FrYVE4VmRNTVZPTlU1dVp4cG5FUXdINm54M21RM3BLS3laLXVNNEV0QmhvYVZfYWNXY08yRy1ZUExRS1drZjNvRHZrbHpHcVVTeFRWZlBNNzZETTdRZkxxZG9HZnNHY1FnUER5ZEJlYjBUUkNUWGdKWkNNZ1BkaFRSZUtDdU0zaHdYaDlXOFBySWJrbndyeUU1T3F3V3NFZGtKQVRxTjJ2X1g4WFZjNjhFRXdNSGpiaTcwM0JwSzhtTVhwTnQyemxQU0F1LVJjcXVNZ3NDYjB1amdoOU5USHh3UUUtbE1GLUV4M0dObHFZYnA4V2tXOU9HNXdfcUJzNXRoWHRzWUFFaC1aSUFyNGxXZFBlYW1VZEZGTUltVEV0bVQyUnRocHRJM0wtU1IyZC0wZkF4TEdNRXBTdXlrMWJ0QmhfYTdCSHQxaWtZNktOUUJJU2pTQWpPNENCb2RGZExFNlI1Z0lNNVdremluRGU0b2hCZ1V6Sk9EWUQ0bTZuUzBSaHRQZVd3UGxPMGoxcDNoank3RVBCb1ZpUnBlRzVvS2tKWDA0ZXdMcHBtM20ydEpzdXpkSlhyQkRnWmxJLUZ3c2hIdXc3OFBuZ1dGdTJvU21sVnQzUHBYZFhUWFp2aW44SzBzdTNXbUx2VnVVZzdjckJieHhRcWwzN1RIaHJIZU4zODNaMWg0VGhPeU82RE5QVDZJMW8yRTVkWXkyaDdQWDAwQXd0WFc0aVZkUC0tV1FmM0RrNnNXTUdLbVBvSlFwSW1HTUZFYTZTMXBmRGo5U1o0RE4yS3E0STJaRnhMTEtuSGptWGF1RFhZbV9NRFFzSkQ1NFVKaXpWa3BhV21nR3lyYmZCU0xabFBQMlFpR1pKcXY3R3JoR2R6Y0ZLLVpjQmR5NlNTb0lTbTdsWS1WcGFMNTJPWUc1blBqcGg3YlA1NnJJZ2pPMmQ1U3VvQU5JYm5CemN3YktpMG5ZVHo3UEt2TlQ1SEduQ2M5M2E3RXlBTFl0QUw1ZHFmbUR2cTlvcFRUYTRJV2JjVXpNd3RCM09UdFRhR2x5NmozdTFlN0dHdHpnSVUwbE9pLTA0U184RUlKTGlEQlFDNVdQM1F2QlBSd1hWZkhJdWlIS2hjanc3N1NKVFlGWTBpVlNBblhGZW9VNlVhSnZUWlVENHRmXzJ6R0p1Zko1WWJCODVFeDFMYWhjRG10ZmpwTjFHbGUtLWFoeWpEbUMtSEtyQndYNTE4cEZyVkNlMktiX0NjQ0xBbmhHNjdFMEVwV3lKa3BIT2Jjd0czMGM3bHdSOXRsUUFjSFNiOTFnXzZMR2xPMlo0X0NjMXNsUnB1T1gtbjQydllRbFk0NjhPNGhxajFkTGgxbWtjc2VjYzZOZlRPQ0RJMzI1T0VtRk5Sb1NFVkVoXzVya3FOU05qSTFUREo4QmZVeEpIZG9HcC1vX3o1RGwydVJPbzFfQ0JWcDZwcXppQUs3OW10bUI0bXZGanNud2M2M3ZJQ1luTkEtXzRBYTlxZ2gwUHVxbmdyRlBqTlJMVXpVTlNDbm1vTFMyanRGdlFkSUFBWkl4Y3poVEJ6RHpMRmRsUmpVWEh1TmxXXzFxM09HMkNZZk5TSldHbHNMc1A4X2NQaHhDLS0yakNGQzN3cDhfTVlVbldOUkFxQ0pRbTFCOHVXTThyWnlCdEVOWjZaRTZEQ0Q1WGtCOVpDZnNzMHBaQ0wzc2dpeVBZS1p5ajhBZnRXUy1hX1JlTVRkTUF6RmVwZzFlckY4SnBjNy0tS251YjlDRHRIeXJBdFNFSE1pOC1fS0w5OUpNZmxHNk9UdXNPM1NkUlNmYWQ2aHVSTW85OUdLc29oQkRW)
        xcode: latest
        cocoapods: default
      triggering:
        events:
          - push
          - tag
          - pull_request
        branch_patterns:
          - pattern: 'master'
            include: true
            source: true
      scripts:
        - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
          script: |
            keychain initialize
        - name: 
          script: |
            app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_DEVELOPMENT --create
        - name: Use system default keychain
          script: |
            keychain add-certificates
        - name: Set up code signing settings on Xcode project
          script: |
            xcode-project use-profiles
        - name: Increment build number
          script: |
            #!/bin/sh
            set -e
            set -x
            cd $FCI_BUILD_DIR
            agvtool new-version -all $(($BUILD_NUMBER + 1))
        - name: Build ipa for distribution
          script: |
            xcode-project build-ipa --workspace "$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
      artifacts:
        - build/ios/ipa/*.ipa
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      publishing:
        app_store_connect:                 
          apple_id: suhajda.kevin.ferenc@gmail.com   
          password: Encrypted(Z0FBQUFBQmZsYUM3YnBEUWdEbDFVSURmb0VydVlkZkthNkEwdFMxQ0JLTjhEeWM3VFNnREh5czRFOERNZ04yVHFKdGwxcDZSY2w4NzBQcUlNenEyZ3MzTDRvMV9GUVRDVlhaZjl4S1RJQWZaNUZJZVhKTkZma2M9)
        email:
            recipients:
            - kevin@nevercode.io
